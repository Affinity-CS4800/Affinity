@{
    ViewData["Title"] = "Home Page";
}

@section styles {
    <style>
        .cta {
            position: relative;
        }
        .graph {
            position: relative;
            width: 100%;
            height: 100%;
            z-index: -1;
            margin-top: -15%;
            padding-left: 30%;
        }

        #mynetwork {
            display: block;
            box-sizing: border-box;
            width: 100%;
            height: 100%;
        }
    </style>
}

<section class="cta">
    <h2 class="cta-callout">Make graphs online</h2>
    <p class="cta-description">Use our editor to make and export beautiful graphs.</p>
    <a class="cta-action" href="/graph">Graph now</a>
    <div class="graph">
        <div id="mynetwork"></div>
    </div>
</section>
<section class="features">
    <h2 class="hidden">Features</h2>
    <div class="feature">
        <div class="feature-visual">
            <img src="~/img/moser-spindle-colored.jpg" class="feature-image" width="50px" height="50px" />
        </div><div class="feature-text">
            <h3 class="feature-name">Create graphs with ease</h3>
            <p class="feature-description">Affinity provides a simple, easy to use interface to create graphs. We've combined simplicity and versatility, so you can easily create customized graphs to fit your needs.</p>
        </div>
    </div>
    <div class="feature clearfix">
        <div class="feature-visual">
            <img src="~/img/alignment-graph.jpg" class="feature-image" width="50px" height="50px" />
        </div><div class="feature-text">
            <h3 class="feature-name">Save and return to graphs</h3>
            <p class="feature-description">Making a complicated graph? Don't want to lose your progress? With a free account, you can save your graphs and return to them later to export or continue editing them.</p>
        </div>
    </div>
    <div class="feature">
        <div class="feature-visual">
            <img src="~/img/export-graph.jpg" class="feature-image" width="50px" height="50px" />
        </div><div class="feature-text">
            <h3 class="feature-name">Export to PDF and PNG</h3>
            <p class="feature-description">Share your graphs and seamlessly embed them within your documents. With one click, you can export your beautiful graphs to your preferred file format. </p>
        </div>
    </div>
</section>

@section scripts {
    <!-- The core Firebase JS SDK is always required and must be listed first -->
    <script type="text/javascript" src="https://www.gstatic.com/firebasejs/6.6.2/firebase-app.js"></script>
    <script type="text/javascript" src="https://www.gstatic.com/firebasejs/6.6.1/firebase-auth.js"></script>
    <script type="text/javascript" src="~/js/vis-network.js"></script>
    <script type="text/javascript" src="~/js/FIREBASE_CONFIG.js"></script>
    <script type="text/javascript" src="~/js/firebase.js"></script>
    <script type="text/javascript">
        let NETWORK;
        const NODES = [
            { id: 0, color: '#0091ea', label: 'A', x: 25, y: 75 },
            { id: 1, color: '#ea0000', label: 'B', x: 95, y: 125 },
            { id: 2, color: '#00ea01', label: 'C', x: 100, y: 15 },
            { id: 3, color: '#6900ea', label: 'D', x: 150, y: 65 },
            { id: 4, color: '#ea8e00', label: 'E', x: 170, y: -20 }
        ];
        
        const EDGES = [
            { id: 0, from: 0, to: 1 },
            { id: 1, from: 1, to: 2 },
            { id: 2, from: 0, to: 2 },
            { id: 3, from: 4, to: 3 },
            { id: 4, from: 2, to: 4 }
        ];

        const graphData = {
            nodes: new vis.DataSet(NODES),
            edges: new vis.DataSet(EDGES)
        }
        var app = new Vue({
            el: '#app',
            data: {
                message: 'Start graphing today.',
                user: false
            },
            created: function () {
                // Store user
                firebase.auth().onAuthStateChanged(user => {
                    console.log(user);
                    this.user = user;
                });
            },
            mounted: function () {
                const options = {
                    autoResize: true,
                    height: "100%",
                    width: "100%",
                    interaction: { hover: false },
                    nodes: {
                        physics: true,
                        scaling: {
                            min: 10,
                            max: 30,
                            label: {
                                min: 8,
                                max: 30,
                                drawThreshold: 2,
                                maxVisible: 200
                            }
                        },
                        shadow: {
                            enabled: true,
                            size: 10,
                            x: 5,
                            y: 5
                        }
                    },
                    physics: {
                        barnesHut: {
                            gravitationalConstant: 0,
                            centralGravity: 0,
                            springConstant: 0,
                        }
                    },
                    edges: {
                        smooth: true,
                        scaling: {
                            min: 10,
                            max: 30,
                            label: {
                                min: 8,
                                max: 30,
                                drawThreshold: 2,
                                maxVisible: 200
                            }
                        }
                    },
                    manipulation: {
                        enabled: false,
                    }
                };
                NETWORK = new vis.Network(document.getElementById('mynetwork'), graphData, options);
                //NETWORK.fit();
                //NETWORK.focus(2, { scale: 2.0 });
            },
            methods: {
                signOut: function (event) {
                    if (this.user) {
                        firebase.auth().signOut().then(function () {
                            // Successfully signed out.
                            document.cookie = "aff_t=; Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
                        }).catch(function (error) {
                            // An error happened.
                        });
                        window.location.reload(true); // refresh page
                    }
                }
            }
        })
    </script>
}

